<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = view_xview+view_wview/2;
y = view_yview-sprite_height/2;

width = room_width;
height = 150;

text = "";
replacedSpaces = false;

slowDown = false;
generalMoveSpeed = view_hview/room_speed*2.5;
middleMoveSpeed = 40/room_speed;
middleTime = 0.8;

waitForTap = false;
stopHeight = room_height/2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!slowDown)
{
    y += generalMoveSpeed;
    if (y &gt;= stopHeight &amp;&amp; middleTime &gt;= 0)
    {
        y = stopHeight;
        slowDown = true;
    }
}
else
{
    if (!waitForTap)
    {
        y += middleMoveSpeed;
        middleTime -= 1/room_speed;
        if (middleTime &lt;= 0)
        {
            slowDown = false;
        }
    }
    else if (mouse_check_button_pressed(mb_left))
    {
        slowDown = false;
        middleTime = 0;
        waitForTap = false;
    }
}
if (y &gt; room_height+sprite_height/2)
{
    if (Game.levelCompleted)
    {
        Game.currentLevel++;
        CalculatePagesUnlocked();
        if (Game.currentLevel &gt;= Game.createdLevels || /*Game.currentLevel%Menu.maxPageButtons == 0)//*/Game.currentLevel &gt;= (Game.pagesUnlocked+1)*Menu.maxPageButtons)
        {
            RoomGoTo(rm_levelSelection);
        }
        else
        {
            LoadLevel(Game.currentLevel);
        }
        instance_destroy();
    }
    else if (Game.notEnoughTaps || Game.notEnoughTime)
    {
        LoadLevel(Game.currentLevel);
        instance_destroy();
    }
    else if (Game.bombExploded)
    {
        LoadLevel(Game.currentLevel);
        instance_destroy();
    }
    else if (instance_exists(obj_gestureTouch))
    {
        if (text == "Get every tile white!")
        {
            with (obj_tile)
            {
                turn = -1;
                colorIndex = 0;
            }
            TurnTiles(Game.board[1,1]);
            obj_gestureTouch.destroy = true;
        }
        else
        {
            with (instance_create(x,y,obj_upDownMessage))
            {
                text = "Get every tile white!";
                waitForTap = true;
                stopHeight = other.stopHeight;
            }
        }
        instance_destroy();
    }
    else
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (slowDown &amp;&amp; waitForTap)
{
    slowDown = false;
    middleTime = 0;
    waitForTap = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_alpha(alpha);
//draw_set_color(c_black);
//draw_set_halign(fa_center);
//draw_set_valign(fa_middle);
//draw_set_font(fnt_fadeText);
//draw_sprite(sprite,0,x,y);

//draw_self();
draw_set_color(Game.color_black);
draw_rectangle(x-width/2,y-height,x+width,y+height,false);
draw_set_font(font2)
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_white);
//draw_text_ext(x,y,text,87,sprite_width-64);
draw_text_transformed(x,y,text,0.7,0.7,0);

//draw_text(view_wview/2,view_hview/2,text);
//draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>384,144</point>
    <point>384,384</point>
  </PhysicsShapePoints>
</object>
