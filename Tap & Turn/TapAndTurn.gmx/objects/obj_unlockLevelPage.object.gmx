<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>requiredCoins = Menu.maxPageButtons*2*Menu.pageIndex-Game.totalCoins
text = "More coins required!";
image_alpha = -0.5;
x = 340;
y = 680;

waitFrames = 1;
surf = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Game.gotoRoom == -1 &amp;&amp; !Menu.turningPage)
{
    image_alpha += 1.5/room_speed;
    if (image_alpha &gt; 1)
    {
        image_alpha = 1;
    }
}
else
{
    image_alpha -= 3/room_speed;
}

if (waitFrames == 0)
{
    surf = GetPageLockedSprite();
}
waitFrames --;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_sprite(sprite,0,room_width/2,room_height/2);
/*draw_set_alpha(image_alpha);
draw_set_color(c_white);
draw_text_transformed(room_width/2,room_height/4,text,0.55,0.55,0);
draw_sprite_ext(spr_lockBig,0,380,600,1,1,0,c_white,image_alpha);
var scale = 0.75;
draw_sprite_ext(spr_coin,2,x+40,y,scale,scale,0,c_white,image_alpha);
draw_sprite_ext(spr_coin,1,x,y,scale,scale,0,c_white,image_alpha);
draw_sprite_ext(spr_coin,0,x-40,y,scale,scale,0,c_white,image_alpha);
draw_set_color(Game.color_black);
draw_text_transformed(x+150,y,string(requiredCoins),0.9,0.9,0);
draw_set_alpha(1);*/

//draw_sprite(sprite,0,0,0);
if (surf != -1)
{
    with (obj_buttonLevel)
    {
        width = Game.tileWidth*1.2;
        height = Game.tileHeight*1.2;
        
        arrayIndex = level%Menu.maxPageButtons;
        xOff = arrayIndex%Menu.pageHorizontalTiles*width;
        yOff = floor(arrayIndex/Menu.pageHorizontalTiles)*height;
        draw_surface_part_ext(other.surf,x-width/2,y-height/2,width,height,x-(width*image_xscale)/2,y-(height*image_yscale)/2,image_xscale,image_yscale,c_white,1);
        //draw_sprite_part_ext(other.sprite,0,x-width/2,y-height/2,width,height,x-(width*image_xscale)/2,y-(height*image_yscale)/2,image_xscale,image_yscale,c_white,1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
