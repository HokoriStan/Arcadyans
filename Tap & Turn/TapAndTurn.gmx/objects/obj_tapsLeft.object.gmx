<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_tapsLeft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tapsLeft = -1;
image_speed = 0;
image_alpha = 0;
image_xscale = 2;
image_yscale = 2;
drawSelf = true;
time = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (Game.gotoRoom == -1 &amp;&amp; image_xscale &gt; 1)
{
    image_xscale -= 8/room_speed;
    image_yscale -= 8/room_speed;
    image_alpha += 8/room_speed;
    if (image_xscale &lt;= 1)
    {
        image_xscale = 1;
        image_yscale = 1;
        image_alpha = 1;
    }
}
else if (Game.gotoRoom != -1)
{
    image_xscale += 8/room_speed;
    image_yscale += 8/room_speed;
    image_alpha -= 8/room_speed;
}

if (Game.gameMode == Game.gameModeAgainstTime)
{
    if (time &lt;= 0 &amp;&amp; time &gt; -1 &amp;&amp; !instance_exists(obj_brokenCoin))
    {
        CrackCoin();
        if (image_index &gt; image_number -1)
        {
            image_index--;
            time = -1;
            if (!Game.notEnoughTime)
            {
                Game.notEnoughTime = true;
                obj_controller.alarm[1] = room_speed/2;
            }
        }
        else if (image_index == 1)
        {
            time = 4;
        }
        else
        {
            time = 15;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched(spr_tapsLeftBackground,0,0,0,room_width,sprite_get_height(spr_tapsLeftBackground));
if (!drawSelf)
{
    image_alpha -= 0.7;
}
draw_self();
if (!drawSelf)
{
    image_alpha += 0.7;
}
draw_set_alpha(image_alpha);
draw_set_font(font1);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_colour(c_black);

if (Game.gameMode == Game.gameModeWithinTaps)
{
    draw_text_transformed(x,y,string(max(0,tapsLeft)),image_xscale,image_yscale,0);
    draw_set_halign(fa_left);
    draw_text_transformed(x+sprite_width/2,y,"  Taps left",image_xscale,image_yscale,0);
    draw_set_alpha(1);
}
else
{
    draw_text_transformed(x,y,string(floor(max(0,time))),image_xscale,image_yscale,0);
    draw_set_halign(fa_left);
    draw_text_transformed(x+sprite_width/2,y,"  Seconds left",image_xscale,image_yscale,0);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>75,75</point>
    <point>75,75</point>
  </PhysicsShapePoints>
</object>
