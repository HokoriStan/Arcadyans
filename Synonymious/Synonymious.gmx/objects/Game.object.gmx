<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>debug = false;
debugClick = 0;


var file = file_text_open_read("Words with synonyms.txt");
application_surface_enable(false);
device_mouse_dbclick_enable(false);

level = 0;
levelSolved = false;
synonymMap = ds_map_create();
var keyList = ds_list_create();
var i = 0;
while (!file_text_eof(file))
{
    var line = file_text_read_string(file);
    var tab = chr(vk_tab);
    var tabPos = string_pos(tab,line);
    var key = string_copy(line,0,tabPos-1);
    
    var byte = string_byte_at(key,0);
    if (byte &gt;= 97)
    {
        byte -= 32;
        key = chr(byte)+string_delete(key,1,1);
    }
    
    var value = string_copy(line,tabPos+1,string_length(line)-tabPos);
    value = string_upper(value);
    if (string_length(value) &gt; 12)
    {
        show_debug_message(key+" - "+value+" has exeeded the max length of 12 characters: "+string(string_length(value)));
    }
    //key = "Test";
    //value = "QWERTYUIOPAS";
    //show_debug_message(key+" = "+value);
    ds_map_add(synonymMap,key,value);
    ds_list_add(keyList,key);
    i++;
    file_text_readln(file);
}

ds_list_shuffle(keyList);
for (var i=0;i&lt;ds_list_size(keyList);i++)
{
    keyArray[i] = ds_list_find_value(keyList,i);
}

CreateLevel(level);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Background Bubbles
if room = rm_game
    {
    for (var i=0;i&lt;6;i++)
        {
        instance_create(random_range(-512,1280),random_range(-512,1812),obj_circle);
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>level ++;
levelSolved = false;
with (obj_inputBox)
{
    instance_destroy();
}
with (obj_letterBox)
{
    instance_destroy();
}
CreateLevel(level);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(vk_backspace) || keyboard_check_pressed(vk_escape))
{
    if (show_question("Are you sure you would like to quit?"))
    {
        game_end();
    }
}

if (!debug)
{
    if (mouse_check_button_pressed(mb_left))
    {
        
        switch (debugClick)
        {
            case 0: 
            if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick++;
            }
            break;
            
            case 1:
            if (mouse_x &gt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick++;
            }
            else if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick = 1;
            }
            break;
            
            case 2:
            if (mouse_x &gt; room_width/2 &amp;&amp; mouse_y &gt; room_height/2)
            {
                debugClick++;
            }
            else if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick = 1;
            }
            break;
            
            case 3:
            if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &gt; room_height/2)
            {
                debugClick++;
            }
            else if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick = 1;
            }
            break;
            
            default:
            if (mouse_x &lt; room_width/2 &amp;&amp; mouse_y &lt; room_height/2)
            {
                debugClick = 1;
            }
            else
            {
                debugClick = 0;
            }
            break;
        }
        if (debugClick == 4)
        {
            show_debug_message("Debug enabled!");
            debug = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_white);

draw_set_font(fnt_synonymFor);

draw_set_color(c_black);
draw_set_alpha(0.25);
draw_text(room_width/2,room_height*0.2+5,"Synonym for:");

draw_set_color(c_white);
draw_set_alpha(1);
draw_text(room_width/2,room_height*0.2,"Synonym for:");

draw_set_color(c_black);
draw_set_alpha(0.25);
draw_set_font(fnt_questionText);
draw_text(room_width/2,room_height*0.3+8,question);

draw_set_color(c_white);
draw_set_alpha(1);
draw_set_font(fnt_questionText);
draw_text(room_width/2,room_height*0.3,question);

if (debug)
{
    draw_set_halign(fa_right);
    draw_text_transformed(room_width,room_height-20,answer,0.2,0.2,0);
}
//4144959
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
